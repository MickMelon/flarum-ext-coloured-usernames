{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCKxDC,IAAAA,aAAAA,IAAqB,gCAAgC,YACnDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAoB,QAAQ,SAAUC,GAC3C,IAAMC,EAAOC,KAAKC,MAAMC,KAAKH,OAG7B,GAAKA,EAAL,CAMA,IAAMI,EAAoBJ,EAAKK,SAASC,MAAK,SAACC,GAC5C,OAAOA,EAAMC,WAIf,GAAKJ,EAAL,CAIA,IAAMK,EAAW,SAACC,GAChB,OAAO,SAACC,GAAD,OAAUA,GAAQA,EAAKD,KAAOC,EAAKD,MAAQA,IAS9CE,EAASb,EAAMc,SAASP,KAAKG,EAAS,OAAOI,SAASP,KAAKG,EAASK,MAAOD,SAASP,MAAgB,WALjG,SAACK,GAAD,OAAUA,GAAQA,EAAKT,OAASS,EAAKT,MAAMa,WAKsD,aALzCJ,EAAKT,MAAMa,aAO5EH,EAAOV,MAAQU,EAAOV,OAAS,GAC/BU,EAAOV,MAAMc,MAAQJ,EAAOV,MAAMc,OAAS,GAC3CJ,EAAOV,MAAMc,MAAMR,MAAQJ,EAAkBI,iB","sources":["webpack://@mickmelon/flarum-ext-coloured-usernames/webpack/bootstrap","webpack://@mickmelon/flarum-ext-coloured-usernames/webpack/runtime/compat get default export","webpack://@mickmelon/flarum-ext-coloured-usernames/webpack/runtime/define property getters","webpack://@mickmelon/flarum-ext-coloured-usernames/webpack/runtime/hasOwnProperty shorthand","webpack://@mickmelon/flarum-ext-coloured-usernames/webpack/runtime/make namespace object","webpack://@mickmelon/flarum-ext-coloured-usernames/external root \"flarum.core.compat['forum/app']\"","webpack://@mickmelon/flarum-ext-coloured-usernames/external root \"flarum.core.compat['common/extend']\"","webpack://@mickmelon/flarum-ext-coloured-usernames/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@mickmelon/flarum-ext-coloured-usernames/external root \"flarum.core.compat['common/components/Link']\"","webpack://@mickmelon/flarum-ext-coloured-usernames/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport PostUser from 'flarum/forum/components/PostUser';\nimport Link from 'flarum/common/components/Link';\n\napp.initializers.add('mickmelon-coloured-usernames', () => {\n  extend(PostUser.prototype, 'view', function (vnode) {\n    const user = this.attrs.post.user();\n\n    // If the post belongs to a deleted user, skip\n    if (!user) {\n      return;\n    }\n\n    // Find the first group that has a color\n    // We don't read badges because we would need to support every badge component and its attrs\n    const firstColoredGroup = user.groups().find((group) => {\n      return group.color();\n    });\n\n    // If there are no color groups, skip\n    if (!firstColoredGroup) {\n      return;\n    }\n\n    const matchTag = (tag) => {\n      return (node) => node && node.tag && node.tag === tag;\n    };\n\n    const matchClass = (className) => {\n      return (node) => node && node.attrs && node.attrs.className && node.attrs.className === className;\n    };\n\n    // Set the colour of the username class\n    // This is the only part that has been changed from clark's repo :)\n    const avatar = vnode.children.find(matchTag('h3')).children.find(matchTag(Link)).children.find(matchClass('username'));\n\n    avatar.attrs = avatar.attrs || {};\n    avatar.attrs.style = avatar.attrs.style || {};\n    avatar.attrs.style.color = firstColoredGroup.color();\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","PostUser","vnode","user","this","attrs","post","firstColoredGroup","groups","find","group","color","matchTag","tag","node","avatar","children","Link","className","style"],"sourceRoot":""}