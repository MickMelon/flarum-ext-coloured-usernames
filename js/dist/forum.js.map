{"version":3,"sources":["webpack://@mickmelon/coloured-usernames/webpack/bootstrap","webpack://@mickmelon/coloured-usernames/./forum.js","webpack://@mickmelon/coloured-usernames/./src/forum/index.js","webpack://@mickmelon/coloured-usernames/external \"flarum.core.compat['app']\"","webpack://@mickmelon/coloured-usernames/external \"flarum.core.compat['components/Link']\"","webpack://@mickmelon/coloured-usernames/external \"flarum.core.compat['components/PostUser']\"","webpack://@mickmelon/coloured-usernames/external \"flarum.core.compat['components/TerminalPost']\"","webpack://@mickmelon/coloured-usernames/external \"flarum.core.compat['extend']\""],"names":["app","initializers","add","extend","PostUser","prototype","vnode","user","attrs","post","colour","getColour","username","children","find","matchTag","Link","matchClass","setUsernameColour","TerminalPost","discussion","console","log","groups","group","color","tag","node","className","includes","style"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","export * from \"./src/forum\";\r\n","import app from \"flarum/app\";\r\nimport { extend } from \"flarum/extend\";\r\nimport PostUser from \"flarum/components/PostUser\";\r\nimport TerminalPost from \"flarum/components/TerminalPost\";\r\nimport Link from \"flarum/components/Link\";\r\n\r\napp.initializers.add(\"mickmelon-coloured-usernames\", () => {\r\n  extend(PostUser.prototype, \"view\", function (vnode) {\r\n    const user = this.attrs.post.user();\r\n    if (!user) {\r\n      return;\r\n    }\r\n\r\n    const colour = getColour(user);\r\n    if (!colour) {\r\n      return;\r\n    }\r\n\r\n    // Set the colour of the username class\r\n    const username = vnode.children\r\n      .find(matchTag(\"h3\"))\r\n      .children.find(matchTag(Link))\r\n      .children.find(matchClass(\"username\"));\r\n    if (!username) {\r\n      return;\r\n    }\r\n\r\n    setUsernameColour(username, colour);\r\n  });\r\n\r\n  extend(TerminalPost.prototype, \"view\", function (vnode) {\r\n    const user = this.attrs.discussion.user();\r\n    if (!user) {\r\n      return;\r\n    }\r\n\r\n    console.log(user);\r\n\r\n    const colour = getColour(user);\r\n    if (!colour) {\r\n      return;\r\n    }\r\n\r\n    const username = vnode.children[2].children[0];\r\n    if (!username) {\r\n      return;\r\n    }\r\n\r\n    setUsernameColour(username, colour);\r\n  });\r\n});\r\n\r\nconst getColour = (user) => {\r\n  // Find the first group that has a color\r\n  // We don't read badges because we would need to support every badge component and its attrs\r\n  const colour = user.groups().find((group) => {\r\n    return group.color();\r\n  });\r\n  return colour;\r\n};\r\n\r\nconst matchTag = (tag) => {\r\n  return (node) => node && node.tag && node.tag === tag;\r\n};\r\n\r\nconst matchClass = (className) => {\r\n  return (node) =>\r\n    node &&\r\n    node.attrs &&\r\n    node.attrs.className &&\r\n    (node.attrs.className === className ||\r\n      node.attrs.className.includes(className));\r\n};\r\n\r\nconst setUsernameColour = (username, colour) => {\r\n  username.attrs = username.attrs || {};\r\n  username.attrs.style = username.attrs.style || {};\r\n  username.attrs.style.color = colour.color();\r\n};\r\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Link'];","module.exports = flarum.core.compat['components/PostUser'];","module.exports = flarum.core.compat['components/TerminalPost'];","module.exports = flarum.core.compat['extend'];"],"sourceRoot":""}